#1
–°–∞–Ω–µ—á–∫–∞, [17.10.2025 22:58]
print("üìö –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ü–†–û–ì–†–ê–ú–ú–£ –†–ê–ë–û–¢–´ –°–û –°–õ–û–í–ê–†–Ø–ú–ò! üìö")
print("=" * 55)

# =============================================================================
# 1. –°–õ–û–í–ê–†–¨ –°–¢–£–î–ï–ù–¢–û–í –ò –°–†–ï–î–ù–ò–ô –ë–ê–õ–õ
# =============================================================================
print("\n\033[1;35m" + "üéì –°–õ–û–í–ê–†–¨ –°–¢–£–î–ï–ù–¢–û–í –ò –°–†–ï–î–ù–ò–ô –ë–ê–õ–õ" + "\033[0m")
print("‚ïî" + "‚ïê" * 50 + "‚ïó")

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: –∫–ª—é—á - –∏–º—è, –∑–Ω–∞—á–µ–Ω–∏–µ - –æ—Ü–µ–Ω–∫–∞
students = {
    "–ê–ª–µ–∫—Å–µ–π": 85,
    "–ú–∞—Ä–∏—è": 92,
    "–ò–≤–∞–Ω": 78,
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞": 95,
    "–î–º–∏—Ç—Ä–∏–π": 88
}

print("   –û—Ü–µ–Ω–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:")
for name, grade in students.items():
    print(f"   {name}: \033[1;36m{grade}\033[0m –±–∞–ª–ª–æ–≤")

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞
average_grade = sum(students.values()) / len(students)
print(f"\n   –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: \033[1;32m{average_grade:.2f}\033[0m")
print("‚ïö" + "‚ïê" * 50 + "‚ïù")

# =============================================================================
# 2. –ü–û–î–°–ß–ï–¢ –ö–û–õ–ò–ß–ï–°–¢–í–ê –ö–ê–ñ–î–û–ô –ë–£–ö–í–´ –í –°–¢–†–û–ö–ï
# =============================================================================
print("\n\033[1;34m" + "üî§ –ü–û–î–°–ß–ï–¢ –ë–£–ö–í –í –°–¢–†–û–ö–ï" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")

# –í–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
text = input("   –í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ")

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –±—É–∫–≤
letter_count = {}
for char in text.lower():  # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è —É—á–µ—Ç–∞ –≤—Å–µ—Ö –±—É–∫–≤
    if char.isalpha():  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–∏–º–≤–æ–ª —è–≤–ª—è–µ—Ç—Å—è –±—É–∫–≤–æ–π
        if char in letter_count:
            letter_count[char] += 1  # –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –±—É–∫–≤—ã
        else:
            letter_count[char] = 1  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –±—É–∫–≤—ã –≤ —Å–ª–æ–≤–∞—Ä—å

print("\n   –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥—Å—á–µ—Ç–∞ –±—É–∫–≤:")
for letter, count in sorted(letter_count.items()):  # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
    print(f"   –ë—É–∫–≤–∞ '{letter}': \033[1;33m{count}\033[0m —Ä–∞–∑(–∞)")
print("‚îî" + "‚îÄ" * 45 + "‚îò")

# =============================================================================
# 3. –°–õ–û–í–ê–†–¨ –ö–í–ê–î–†–ê–¢–û–í –ß–ò–°–ï–õ
# =============================================================================
print("\n\033[1;33m" + "üßÆ –°–õ–û–í–ê–†–¨ –ö–í–ê–î–†–ê–¢–û–í –ß–ò–°–ï–õ –û–¢ 1 –î–û 10" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è: –∫–ª—é—á - —á–∏—Å–ª–æ, –∑–Ω–∞—á–µ–Ω–∏–µ - –µ–≥–æ –∫–≤–∞–¥—Ä–∞—Ç
squares_dict = {}
for number in range(1, 11):  # –ß–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 10
    squares_dict[number] = number ** 2  # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–∞

print("   –ß–∏—Å–ª–æ ‚Üí –ö–≤–∞–¥—Ä–∞—Ç:")
for num, square in squares_dict.items():
    print(f"   {num:2} ‚Üí \033[1;36m{square:3}\033[0m")
print("‚îî" + "‚îÄ" * 45 + "‚îò")

# =============================================================================
# 4. –°–û–ó–î–ê–ù–ò–ï –°–õ–û–í–ê–†–Ø –ò–ó –î–í–£–• –°–ü–ò–°–ö–û–í
# =============================================================================
print("\n\033[1;36m" + "üîÑ –°–û–ó–î–ê–ù–ò–ï –°–õ–û–í–ê–†–Ø –ò–ó –î–í–£–• –°–ü–ò–°–ö–û–í" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")

# –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π
keys_list = ["–∏–º—è", "–≤–æ–∑—Ä–∞—Å—Ç", "–≥–æ—Ä–æ–¥", "–ø—Ä–æ—Ñ–µ—Å—Å–∏—è"]
# –°–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π
values_list = ["–ê–Ω–Ω–∞", 25, "–ú–æ—Å–∫–≤–∞", "–∏–Ω–∂–µ–Ω–µ—Ä"]

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è –∏–∑ –¥–≤—É—Ö —Å–ø–∏—Å–∫–æ–≤ —Å –ø–æ–º–æ—â—å—é zip()
combined_dict = dict(zip(keys_list, values_list))

print("   –ö–ª—é—á–∏:    \033[1;35m{}\033[0m".format(keys_list))
print("   –ó–Ω–∞—á–µ–Ω–∏—è: \033[1;35m{}\033[0m".format(values_list))
print("\n   –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å:")
for key, value in combined_dict.items():
    print(f"   {key}: \033[1;32m{value}\033[0m")
print("‚îî" + "‚îÄ" * 45 + "‚îò")

# =============================================================================
# 5. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –†–ê–ë–û–¢–ê –°–û –°–õ–û–í–ê–†–ï–ú (–ü–û–ò–°–ö –ò –ò–ó–ú–ï–ù–ï–ù–ò–ï)
# =============================================================================
print("\n\033[1;32m" + "üîç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –ü–û–ò–°–ö –ò –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–ù–ê–ß–ï–ù–ò–ô" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")

# –ü–æ–∏—Å–∫ —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–æ–π
max_student = max(students, key=students.get)
max_grade = students[max_student]
print(f"   –õ—É—á—à–∏–π —Å—Ç—É–¥–µ–Ω—Ç: \033[1;31m{max_student}\033[0m —Å –æ—Ü–µ–Ω–∫–æ–π \033[1;31m{max_grade}\033[0m")

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
students["–û–ª—å–≥–∞"] = 90
print(f"   –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Å—Ç—É–¥–µ–Ω—Ç: –û–ª—å–≥–∞ —Å –æ—Ü–µ–Ω–∫–æ–π 90")

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
students["–ò–≤–∞–Ω"] = 85
print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞ –ò–≤–∞–Ω–∞: 78 ‚Üí 85")

–°–∞–Ω–µ—á–∫–∞, [17.10.2025 22:58]
print("\n   –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:")
for name, grade in students.items():
    print(f"   {name}: \033[1;36m{grade}\033[0m –±–∞–ª–ª–æ–≤")
print("‚îî" + "‚îÄ" * 45 + "‚îò")

# =============================================================================
# –ó–ê–í–ï–†–®–ï–ù–ò–ï –ü–†–û–ì–†–ê–ú–ú–´
# =============================================================================
print("\n\033[1;42m" + "‚ú® –í–´–ü–û–õ–ù–ï–ù–ò–ï –ü–†–û–ì–†–ê–ú–ú–´ –ó–ê–í–ï–†–®–ï–ù–û! ‚ú®" + "\033[0m")
#2
# -*- coding: utf-8 -*-
import random

print("üé≤ –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ü–†–û–ì–†–ê–ú–ú–£ –†–ê–ë–û–¢–´ –°–û –°–ü–ò–°–ö–ê–ú–ò! üé≤")
print("=" * 55)

# =============================================================================
# 0. –ì–ï–ù–ï–†–ê–¶–ò–Ø –°–õ–£–ß–ê–ô–ù–û–ì–û –°–ü–ò–°–ö–ê –ß–ò–°–ï–õ
# =============================================================================
print("\n\033[1;35m" + "üéØ –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ô –°–õ–£–ß–ê–ô–ù–´–ô –°–ü–ò–°–û–ö" + "\033[0m")
print("‚ïî" + "‚ïê" * 63 + "‚ïó")
numbers = [random.randint(-50, 50) for _ in range(10)]  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è 10 —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç -50 –¥–æ 50
print(f"   –ò—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫: \033[1;36m{numbers}\033[0m")
print("‚ïö" + "‚ïê" * 63 + "‚ïù")

# =============================================================================
# 1. –í–´–í–û–î –¢–û–õ–¨–ö–û –ß–Å–¢–ù–´–• –≠–õ–ï–ú–ï–ù–¢–û–í –°–ü–ò–°–ö–ê
# =============================================================================
print("\n\033[1;34m" + "üî¢ –í–´–í–û–î –¢–û–õ–¨–ö–û –ß–Å–¢–ù–´–• –≠–õ–ï–ú–ï–ù–¢–û–í" + "\033[0m")
print("‚îå" + "‚îÄ" * 60 + "‚îê")
even_numbers = [num for num in numbers if num % 2 == 0]  # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª
print(f"   –ß—ë—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã: \033[1;32m{even_numbers}\033[0m")
print("‚îî" + "‚îÄ" * 60 + "‚îò")

# =============================================================================
# 2. –ü–û–ò–°–ö –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ì–û –ò –ú–ò–ù–ò–ú–ê–õ–¨–ù–û–ì–û –ß–ò–°–õ–ê
# =============================================================================
print("\n\033[1;33m" + "üìà –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ï –ò –ú–ò–ù–ò–ú–ê–õ–¨–ù–û–ï –ó–ù–ê–ß–ï–ù–ò–Ø" + "\033[0m")
print("‚îå" + "‚îÄ" * 30 + "‚îê")
max_number = max(numbers)  # –ü–æ–∏—Å–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
min_number = min(numbers)  # –ü–æ–∏—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: \033[1;31m{max_number}\033[0m")
print(f"   –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ:  \033[1;34m{min_number}\033[0m")
print("‚îî" + "‚îÄ" * 30 + "‚îò")

# =============================================================================
# 3. –í–í–û–î 5 –ß–ò–°–ï–õ –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ò –°–û–†–¢–ò–†–û–í–ö–ê
# =============================================================================
print("\n\033[1;36m" + "‚å®Ô∏è  –í–í–û–î 5 –ß–ò–°–ï–õ –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")
user_numbers = []  # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–ª—è —á–∏—Å–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
for i in range(5):  # –¶–∏–∫–ª –¥–ª—è –≤–≤–æ–¥–∞ 5 —á–∏—Å–µ–ª
    num = int(input(f"   –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ {i+1}: "))
    user_numbers.append(num)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∏—Å–ª–∞ –≤ —Å–ø–∏—Å–æ–∫ –º–µ—Ç–æ–¥–æ–º append()
user_numbers.sort()  # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
print(f"   –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫: \033[1;35m{user_numbers}\033[0m")
print("‚îî" + "‚îÄ" * 45 + "‚îò")

# =============================================================================
# 4. –£–î–ê–õ–ï–ù–ò–ï –î–£–ë–õ–ò–ö–ê–¢–û–í –ò–ó –°–ü–ò–°–ö–ê (–ë–ï–ó –ú–ù–û–ñ–ï–°–¢–í)
# =============================================================================
print("\n\033[1;32m" + "üö´ –£–î–ê–õ–ï–ù–ò–ï –î–£–ë–õ–ò–ö–ê–¢–û–í –ò–ó –°–ü–ò–°–ö–ê" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")
unique_numbers = []  # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
for num in numbers:  # –ü–µ—Ä–µ–±–æ—Ä –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
    if num not in unique_numbers:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –Ω–æ–≤–æ–º —Å–ø–∏—Å–∫–µ
        unique_numbers.append(num)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
print(f"   –°–ø–∏—Å–æ–∫ –±–µ–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: \033[1;33m{unique_numbers}\033[0m")
print("‚îî" + "‚îÄ" * 45 + "‚îò")

# =============================================================================
# 5. –û–ë–ú–ï–ù –ü–ï–†–í–û–ì–û –ò –ü–û–°–õ–ï–î–ù–ï–ì–û –≠–õ–ï–ú–ï–ù–¢–û–í –ú–ï–°–¢–ê–ú–ò
# =============================================================================
print("\n\033[1;31m" + "üîÑ –û–ë–ú–ï–ù –ü–ï–†–í–û–ì–û –ò –ü–û–°–õ–ï–î–ù–ï–ì–û –≠–õ–ï–ú–ï–ù–¢–û–í" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")
if len(numbers) >= 2:  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤ —Å–ø–∏—Å–∫–µËá≥Â∞ë 2 —ç–ª–µ–º–µ–Ω—Ç–∞
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    first_element = numbers[0]
    last_element = numbers[-1]
    # –û–±–º–µ–Ω –∑–Ω–∞—á–µ–Ω–∏–π —á–µ—Ä–µ–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ
    numbers[0], numbers[-1] = numbers[-1], numbers[0]
    print(f"   –ü–æ—Å–ª–µ –æ–±–º–µ–Ω–∞: \033[1;36m{numbers}\033[0m")
    print(f"   –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –±—ã–ª: {first_element}, —Å—Ç–∞–ª: {numbers[0]}")
    print(f"   –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –±—ã–ª: {last_element}, —Å—Ç–∞–ª: {numbers[-1]}")
else:
    print("   –í —Å–ø–∏—Å–∫–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±–º–µ–Ω–∞")
print("‚îî" + "‚îÄ" * 45 + "‚îò")
# =============================================================================
# –ó–ê–í–ï–†–®–ï–ù–ò–ï –ü–†–û–ì–†–ê–ú–ú–´
# =============================================================================
print("\n\033[1;42m" + "‚ú® –í–´–ü–û–õ–ù–ï–ù–ò–ï –ü–†–û–ì–†–ê–ú–ú–´ –ó–ê–í–ï–†–®–ï–ù–û! ‚ú®" + "\033[0m")
#3
print("üéØ –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ü–†–û–ì–†–ê–ú–ú–£ –ú–ê–¢–ï–ú–ê–¢–ò–ß–ï–°–ö–ò–• –í–´–ß–ò–°–õ–ï–ù–ò–ô! üéØ")
print("=" * 55)

# =============================================================================
# 1. –¢–ê–ë–õ–ò–¶–ê –£–ú–ù–û–ñ–ï–ù–ò–Ø –° –¶–í–ï–¢–ù–´–ú –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï–ú
# =============================================================================
print("\n\033[1;35m" + "üî¢ –¢–ê–ë–õ–ò–¶–ê –£–ú–ù–û–ñ–ï–ù–ò–Ø –û–¢ 1 –î–û 9" + "\033[0m")
print("‚ïî" + "‚ïê" * 104 + "‚ïó")
for i in range(1, 10):  # –í–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª –¥–ª—è –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π –æ—Ç 1 –¥–æ 9
    for j in range(1, 10):  # –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª –¥–ª—è –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π –æ—Ç 1 –¥–æ 9
        result = i * j  # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
        # –¶–≤–µ—Ç–æ–≤–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ: –±–µ–ª—ã–π –¥–ª—è —á–µ—Ç–Ω—ã—Ö, —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π  –¥–ª—è –Ω–µ—á–µ—Ç–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        color = "\033[1;29m" if result % 2 == 0 else "\033[1;35m"
        print(f"{color}{i} √ó {j} = {result:2}\033[0m", end="  ")  # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥
    print()  # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
print("‚ïö" + "‚ïê" * 104 + "‚ïù")

# =============================================================================
# 2. –í–´–ß–ò–°–õ–ï–ù–ò–ï –°–£–ú–ú–´ –ù–ï–ß–Å–¢–ù–´–• –ß–ò–°–ï–õ (–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –ü–û–î–•–û–î)
# =============================================================================
print("\n\033[1;36m" + "üîç –°–£–ú–ú–ê –ù–ï–ß–Å–¢–ù–´–• –ß–ò–°–ï–õ –û–¢ 1 –î–û 100" + "\033[0m")
print("‚îå" + "‚îÄ" * 35 + "‚îê")
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ—á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª —Å —à–∞–≥–æ–º 2 –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—É–º–º—ã
sum_odd = sum(range(1, 101, 2))
print(f"   –°—É–º–º–∞ = \033[1;31m{sum_odd}\033[0m")  # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∫—Ä–∞—Å–Ω—ã–º —Ü–≤–µ—Ç–æ–º
print("‚îî" + "‚îÄ" * 35 + "‚îò")

# =============================================================================
# 3. –ü–û–ò–°–ö –í–°–ï–• –î–ï–õ–ò–¢–ï–õ–ï–ô –ß–ò–°–õ–ê (–ê–ù–ê–õ–ò–ó –î–ï–õ–ò–ú–û–°–¢–ò)
# =============================================================================
print("\n\033[1;34m" + "üìä –ü–û–ò–°–ö –î–ï–õ–ò–¢–ï–õ–ï–ô –ß–ò–°–õ–ê" + "\033[0m")
print("‚îú" + "‚îÄ" * 40 + "‚î§")
number = int(input("   –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))  # –í–≤–æ–¥ —á–∏—Å–ª–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –¥–µ–ª–∏—Ç–µ–ª–µ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º list comprehension
dividers = [i for i in range(1, number+1) if number % i == 0]
print(f"   –î–µ–ª–∏—Ç–µ–ª–∏ —á–∏—Å–ª–∞ \033[1;35m{number}\033[0m: \033[1;32m{dividers}\033[0m")
print("‚îî" + "‚îÄ" * 40 + "‚îò")

# =============================================================================
# 4. –í–´–ß–ò–°–õ–ï–ù–ò–ï –§–ê–ö–¢–û–†–ò–ê–õ–ê –ß–ò–°–õ–ê (–ò–¢–ï–†–ê–¢–ò–í–ù–´–ô –ú–ï–¢–û–î)
# =============================================================================
print("\n\033[1;33m" + "üßÆ –í–´–ß–ò–°–õ–ï–ù–ò–ï –§–ê–ö–¢–û–†–ò–ê–õ–ê" + "\033[0m")
print("‚îú" + "‚îÄ" * 40 + "‚î§")
num_fact = int(input("   –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))  # –í–≤–æ–¥ —á–∏—Å–ª–∞ –¥–ª—è —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞
factorial = 1  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
# –¶–∏–∫–ª –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ num_fact
for i in range(1, num_fact + 1):
    factorial *= i  # –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
print(f"   {num_fact}! = \033[1;36m{factorial}\033[0m")  # –í—ã–≤–æ–¥ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞
print("‚îî" + "‚îÄ" * 40 + "‚îò")

# =============================================================================
# 5. –ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–ò –§–ò–ë–û–ù–ê–ß–ß–ò (–†–ï–ö–£–†–†–ï–ù–¢–ù–ê–Ø –§–û–†–ú–£–õ–ê)
# =============================================================================
print("\n\033[1;31m" + "üêá –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–¨ –§–ò–ë–û–ù–ê–ß–ß–ò" + "\033[0m")
print("‚îú" + "‚îÄ" * 40 + "‚î§")
n = int(input("   –í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: "))  # –í–≤–æ–¥ –¥–ª–∏–Ω—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
fibonacci = [0, 1]  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –§–∏–±–æ–Ω–∞—á—á–∏ –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω—ã–º –º–µ—Ç–æ–¥–æ–º
for i in range(2, n):
    # –ö–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ —Å—É–º–º–µ –¥–≤—É—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö
    fibonacci.append(fibonacci[i-1] + fibonacci[i-2])
print(f"   –ü–µ—Ä–≤—ã–µ \033[1;35m{n}\033[0m —á–∏—Å–µ–ª –§–∏–±–æ–Ω–∞—á—á–∏:")
print(f"   \033[1;32m{fibonacci[:n]}\033[0m")  # –í—ã–≤–æ–¥ —Å—Ä–µ–∑–∞ –Ω—É–∂–Ω–æ–π –¥–ª–∏–Ω—ã
print("‚îî" + "‚îÄ" * 40 + "‚îò")

# =============================================================================
# –ó–ê–í–ï–†–®–ï–ù–ò–ï –ü–†–û–ì–†–ê–ú–ú–´
# =============================================================================
print("\n\033[1;42m" + "‚ú® –í–´–ü–û–õ–ù–ï–ù–ò–ï –ü–†–û–ì–†–ê–ú–ú–´ –ó–ê–í–ï–†–®–ï–ù–û! ‚ú®" + "\033[0m")
#4
# -*- coding: utf-8 -*-
import random
from collections import Counter

print("üéØ –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ü–†–û–ì–†–ê–ú–ú–£ –ö–û–ú–ë–ò–ù–ò–†–û–í–ê–ù–ù–´–• –ó–ê–î–ê–ù–ò–ô! üéØ")
print("=" * 60)

# =============================================================================
# 1. –£–ù–ò–ö–ê–õ–¨–ù–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø –ò–ó –°–õ–£–ß–ê–ô–ù–û–ì–û –°–ü–ò–°–ö–ê
# =============================================================================
print("\n\033[1;35m" + "üî¢ –£–ù–ò–ö–ê–õ–¨–ù–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø –ò–ó –°–õ–£–ß–ê–ô–ù–û–ì–û –°–ü–ò–°–ö–ê" + "\033[0m")
print("‚ïî" + "‚ïê" * 90 + "‚ïó")

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –∏–∑ 20 —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 15
random_numbers = [random.randint(1, 15) for _ in range(20)]
unique_numbers = list(set(random_numbers))  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏ –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤

print("   –ò—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫: \033[1;36m{}\033[0m".format(random_numbers))
print("   –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: \033[1;32m{}\033[0m".format(sorted(unique_numbers)))
print("   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö: \033[1;33m{}\033[0m".format(len(unique_numbers)))
print("‚ïö" + "‚ïê" * 90 + "‚ïù")

# =============================================================================
# 2. –°–õ–û–í–ê–†–¨ –ß–ê–°–¢–û–¢–´ –≠–õ–ï–ú–ï–ù–¢–û–í
# =============================================================================
print("\n\033[1;34m" + "üìä –°–õ–û–í–ê–†–¨ –ß–ê–°–¢–û–¢–´ –≠–õ–ï–ú–ï–ù–¢–û–í" + "\033[0m")
print("‚îå" + "‚îÄ" * 50 + "‚îê")

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è: –∫–ª—é—á - —á–∏—Å–ª–æ, –∑–Ω–∞—á–µ–Ω–∏–µ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
frequency_dict = {}
for num in random_numbers:
    if num in frequency_dict:
        frequency_dict[num] += 1
    else:
        frequency_dict[num] = 1

print("   –ß–∞—Å—Ç–æ—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:")
for num, count in sorted(frequency_dict.items()):
    print(f"   {num:2} ‚Üí \033[1;36m{count:2}\033[0m —Ä–∞–∑(–∞)")
print("‚îî" + "‚îÄ" * 50 + "‚îò")

# =============================================================================
# 3. –ú–ù–û–ñ–ï–°–¢–í–û –°–õ–û–í –î–õ–ò–ù–û–ô –ë–û–õ–¨–®–ï 5 –°–ò–ú–í–û–õ–û–í
# =============================================================================
print("\n\033[1;33m" + "üìù –ú–ù–û–ñ–ï–°–¢–í–û –î–õ–ò–ù–ù–´–• –°–õ–û–í" + "\033[0m")
print("‚îå" + "‚îÄ" * 50 + "‚îê")

words_list = ["–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "python", "–∫–æ–¥", "–∞–ª–≥–æ—Ä–∏—Ç–º",
              "—Å—Ç—Ä—É–∫—Ç—É—Ä–∞", "–¥–∞–Ω–Ω—ã–µ", "–º–Ω–æ–∂–µ—Å—Ç–≤–æ", "—Å–ø–∏—Å–æ–∫", "—Å–ª–æ–≤–∞—Ä—å"]

long_words = {word for word in words_list if len(word) > 5}  # Set comprehension

print("   –ò—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤: \033[1;36m{}\033[0m".format(words_list))
print("   –°–ª–æ–≤–∞ –¥–ª–∏–Ω–æ–π > 5 —Å–∏–º–≤–æ–ª–æ–≤: \033[1;32m{}\033[0m".format(sorted(long_words)))
print("‚îî" + "‚îÄ" * 50 + "‚îò")

# =============================================================================
# 4. –°–õ–û–í–ê–†–¨ –ß–ê–°–¢–û–¢–´ –°–õ–û–í –í –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ò
# =============================================================================
print("\n\033[1;36m" + "üó£Ô∏è  –ß–ê–°–¢–û–¢–ê –°–õ–û–í –í –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ò" + "\033[0m")
print("‚îå" + "‚îÄ" * 50 + "‚îê")

sentence = input("   –í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: ").lower()
words = sentence.split()
word_frequency = {}

for word in words:
    # –£–¥–∞–ª—è–µ–º –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
    clean_word = word.strip('.,!?;:()"\'')
    if clean_word:
        if clean_word in word_frequency:
            word_frequency[clean_word] += 1
        else:
            word_frequency[clean_word] = 1

print("\n   –ß–∞—Å—Ç–æ—Ç–∞ —Å–ª–æ–≤:")
for word, count in word_frequency.items():
    print(f"   '{word}': \033[1;35m{count}\033[0m")
print("‚îî" + "‚îÄ" * 50 + "‚îò")

# =============================================================================
# 5. –£–î–ê–õ–ï–ù–ò–ï –î–£–ë–õ–ò–ö–ê–¢–û–í –ß–ï–†–ï–ó –ú–ù–û–ñ–ï–°–¢–í–û
# =============================================================================
print("\n\033[1;32m" + "üîÑ –£–î–ê–õ–ï–ù–ò–ï –î–£–ë–õ–ò–ö–ê–¢–û–í –ß–ï–†–ï–ó –ú–ù–û–ñ–ï–°–¢–í–û" + "\033[0m")
print("‚îå" + "‚îÄ" * 50 + "‚îê")

duplicated_list = [1, 2, 2, 3, 4, 4, 4, 5, 6, 6, 7, 7, 7, 7]
unique_list = list(set(duplicated_list))  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏ –æ–±—Ä–∞—Ç–Ω–æ

print("   –°–ø–∏—Å–æ–∫ —Å –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏: \033[1;36m{}\033[0m".format(duplicated_list))
print("   –°–ø–∏—Å–æ–∫ –±–µ–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: \033[1;32m{}\033[0m".format(sorted(unique_list)))
print("‚îî" + "‚îÄ" * 50 + "‚îò")

# =============================================================================
# 6. –ü–û–ò–°–ö –°–ê–ú–û–ì–û –î–û–†–û–ì–û–ì–û –¢–û–í–ê–†–ê
# =============================================================================
print("\n\033[1;31m" + "üí∞ –°–ê–ú–´–ô –î–û–†–û–ì–û–ô –¢–û–í–ê–†" + "\033[0m")
print("‚îå" + "‚îÄ" * 50 + "‚îê")
products = {
    "–Ω–æ—É—Ç–±—É–∫": 50000,
    "—Ç–µ–ª–µ—Ñ–æ–Ω": 25000,
    "–ø–ª–∞–Ω—à–µ—Ç": 30000,
    "–Ω–∞—É—à–Ω–∏–∫–∏": 5000,
    "–º–æ–Ω–∏—Ç–æ—Ä": 15000
}

most_expensive = max(products, key=products.get)
max_price = products[most_expensive]

print("   –¶–µ–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤:")
for product, price in products.items():
    print(f"   {product:10} ‚Üí \033[1;36m{price:6}\033[0m —Ä—É–±.")
print(f"\n   –°–∞–º—ã–π –¥–æ—Ä–æ–≥–æ–π —Ç–æ–≤–∞—Ä: \033[1;32m{most_expensive}\033[0m")
print(f"   –¶–µ–Ω–∞: \033[1;33m{max_price}\033[0m —Ä—É–±.")
print("‚îî" + "‚îÄ" * 50 + "‚îò")

# =============================================================================
# 7. –ê–ù–ê–õ–ò–ó –ü–û–í–¢–û–†–Ø–Æ–©–ò–•–°–Ø –ò–ú–ï–ù
# =============================================================================
print("\n\033[1;35m" + "üë• –ê–ù–ê–õ–ò–ó –ü–û–í–¢–û–†–Ø–Æ–©–ò–•–°–Ø –ò–ú–ï–ù" + "\033[0m")
print("‚îå" + "‚îÄ" * 50 + "‚îê")

names = ["–∞–Ω–Ω–∞", "–∏–≤–∞–Ω", "–º–∞—Ä–∏—è", "–∞–Ω–Ω–∞", "–ø–µ—Ç—Ä", "–∏–≤–∞–Ω", "–∞–Ω–Ω–∞", "–æ–ª—å–≥–∞", "–∏–≤–∞–Ω"]

# –ò–º–µ–Ω–∞, –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–µ—Å—è –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞
duplicate_names = {name for name in names if names.count(name) > 1}

# –°–∞–º–æ–µ —á–∞—Å—Ç–æ–µ –∏–º—è
name_counter = Counter(names)
most_common_name, most_common_count = name_counter.most_common(1)[0]

print("   –°–ø–∏—Å–æ–∫ –∏–º–µ–Ω: \033[1;36m{}\033[0m".format(names))
print("   –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –∏–º–µ–Ω–∞: \033[1;32m{}\033[0m".format(sorted(duplicate_names)))
print("   –°–∞–º–æ–µ —á–∞—Å—Ç–æ–µ –∏–º—è: \033[1;33m'{}'\033[0m (–≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è \033[1;33m{}\033[0m —Ä–∞–∑(–∞))".format(
    most_common_name, most_common_count))
print("‚îî" + "‚îÄ" * 50 + "‚îò")

# =============================================================================
# 8. –°–õ–û–í–ê–†–¨ –ü–ï–†–í–´–• –í–•–û–ñ–î–ï–ù–ò–ô –°–ò–ú–í–û–õ–û–í
# =============================================================================
print("\n\033[1;34m" + "üî† –°–õ–û–í–ê–†–¨ –ü–ï–†–í–´–• –í–•–û–ñ–î–ï–ù–ò–ô –°–ò–ú–í–û–õ–û–í" + "\033[0m")
print("‚îå" + "‚îÄ" * 50 + "‚îê")

user_string = input("   –í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ")
first_occurrence = {}

for index, char in enumerate(user_string):
    if char not in first_occurrence:
        first_occurrence[char] = index

print("\n   –ü–µ—Ä–≤—ã–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤:")
for char, index in first_occurrence.items():
    print(f"   '{char}': –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ \033[1;36m{index}\033[0m")
print("‚îî" + "‚îÄ" * 50 + "‚îò")

# =============================================================================
# –ó–ê–í–ï–†–®–ï–ù–ò–ï –ü–†–û–ì–†–ê–ú–ú–´
# =============================================================================
print("\n\033[1;42m" + "‚ú® –í–°–ï –ó–ê–î–ê–ù–ò–Ø –í–´–ü–û–õ–ù–ï–ù–´ –£–°–ü–ï–®–ù–û! ‚ú®" + "\033[0m")
#5
print("üî¢ –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ü–†–û–ì–†–ê–ú–ú–£ –†–ê–ë–û–¢–´ –° –ú–ù–û–ñ–ï–°–¢–í–ê–ú–ò! üî¢")
print("=" * 55)

# =============================================================================
# 1. –°–û–ó–î–ê–ù–ò–ï –ú–ù–û–ñ–ï–°–¢–í: –ü–ï–†–ï–°–ï–ß–ï–ù–ò–ï –ò –û–ë–™–ï–î–ò–ù–ï–ù–ò–ï
# =============================================================================
print("\n\033[1;35m" + "üîÑ –ü–ï–†–ï–°–ï–ß–ï–ù–ò–ï –ò –û–ë–™–ï–î–ò–ù–ï–ù–ò–ï –ú–ù–û–ñ–ï–°–¢–í" + "\033[0m")
print("‚ïî" + "‚ïê" * 50 + "‚ïó")

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–≤—É—Ö –º–Ω–æ–∂–µ—Å—Ç–≤
set1 = {1, 2, 3, 4, 5, 6, 7}
set2 = {4, 5, 6, 7, 8, 9, 10}

print("   –ú–Ω–æ–∂–µ—Å—Ç–≤–æ 1: \033[1;36m{}\033[0m".format(set1))
print("   –ú–Ω–æ–∂–µ—Å—Ç–≤–æ 2: \033[1;36m{}\033[0m".format(set2))

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è (–æ–±—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã)
intersection = set1 & set2
print("   –ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ: \033[1;32m{}\033[0m".format(intersection))

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è (–≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã)
union = set1 | set2
print("   –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ: \033[1;33m{}\033[0m".format(union))

print("‚ïö" + "‚ïê" * 50 + "‚ïù")

# =============================================================================
# 2. –ü–û–ò–°–ö –£–ù–ò–ö–ê–õ–¨–ù–´–• –°–õ–û–í –í –¢–ï–ö–°–¢–ï
# =============================================================================
print("\n\033[1;34m" + "üìù –£–ù–ò–ö–ê–õ–¨–ù–´–ï –°–õ–û–í–ê –í –¢–ï–ö–°–¢–ï" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")

# –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
text = input("   –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ")

# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å–ª–æ–≤–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤
words = text.lower().split()  # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ
unique_words = set(words)

print(f"\n   –í—Å–µ–≥–æ —Å–ª–æ–≤: \033[1;36m{len(words)}\033[0m")
print(f"   –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤: \033[1;32m{len(unique_words)}\033[0m")
print("   –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞: \033[1;33m{}\033[0m".format(sorted(unique_words)))
print("‚îî" + "‚îÄ" * 45 + "‚îò")

# =============================================================================
# 3. –ü–û–ò–°–ö –û–ë–©–ò–• –≠–õ–ï–ú–ï–ù–¢–û–í –í –î–í–£–• –°–ü–ò–°–ö–ê–•
# =============================================================================
print("\n\033[1;33m" + "üîç –û–ë–©–ò–ï –≠–õ–ï–ú–ï–ù–¢–´ –î–í–£–• –°–ü–ò–°–ö–û–í" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–≤—É—Ö —Å–ø–∏—Å–∫–æ–≤ —Å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
list1 = [1, 2, 3, 4, 5, 2, 3, 1]
list2 = [4, 5, 6, 7, 8, 4, 5]

print("   –°–ø–∏—Å–æ–∫ 1: \033[1;36m{}\033[0m".format(list1))
print("   –°–ø–∏—Å–æ–∫ 2: \033[1;36m{}\033[0m".format(list2))

# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–±—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
common_elements = set(list1) & set(list2)

print("   –û–±—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã: \033[1;32m{}\033[0m".format(common_elements))
print("‚îî" + "‚îÄ" * 45 + "‚îò")

# =============================================================================
# 4. –ü–†–û–í–ï–†–ö–ê –ü–û–î–ú–ù–û–ñ–ï–°–¢–í–ê
# =============================================================================
print("\n\033[1;36m" + "‚úÖ –ü–†–û–í–ï–†–ö–ê –ü–û–î–ú–ù–û–ñ–ï–°–¢–í–ê" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")

# –°–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
main_set = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
sub_set = {2, 4, 6, 8}

print("   –û—Å–Ω–æ–≤–Ω–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ: \033[1;35m{}\033[0m".format(main_set))
print("   –ü—Ä–æ–≤–µ—Ä—è–µ–º–æ–µ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ: \033[1;35m{}\033[0m".format(sub_set))

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–¥–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –¥—Ä—É–≥–æ–≥–æ
is_subset = sub_set.issubset(main_set)
print("   –Ø–≤–ª—è–µ—Ç—Å—è –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ–º: \033[1;32m{}\033[0m".format(is_subset))

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
another_set = {11, 12}
is_another_subset = another_set.issubset(main_set)
print("   –ú–Ω–æ–∂–µ—Å—Ç–≤–æ {} —è–≤–ª—è–µ—Ç—Å—è –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ–º: \033[1;31m{}\033[0m".format(another_set, is_another_subset))
print("‚îî" + "‚îÄ" * 45 + "‚îò")

# =============================================================================
# 5. –£–î–ê–õ–ï–ù–ò–ï –≠–õ–ï–ú–ï–ù–¢–û–í –ú–ï–ù–¨–®–ï –ó–ê–î–ê–ù–ù–û–ì–û –ß–ò–°–õ–ê
# =============================================================================
print("\n\033[1;31m" + "üóëÔ∏è  –£–î–ê–õ–ï–ù–ò–ï –≠–õ–ï–ú–ï–ù–¢–û–í –ú–ï–ù–¨–®–ï –ó–ê–î–ê–ù–ù–û–ì–û –ß–ò–°–õ–ê" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")

# –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞
numbers_set = {15, 8, 23, 4, 42, 16, 9, 31, 7, 19}
print("   –ò—Å—Ö–æ–¥–Ω–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ: \033[1;36m{}\033[0m".format(numbers_set))

# –í–≤–æ–¥ –ø–æ—Ä–æ–≥–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
threshold = int(input("   –í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä–æ–≥–æ–≤–æ–µ —á–∏—Å–ª–æ: "))

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –±–µ–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–∞
filtered_set = {x for x in numbers_set if x >= threshold}

–°–∞–Ω–µ—á–∫–∞, [17.10.2025 23:03]
print("   –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ: \033[1;32m{}\033[0m".format(filtered_set))
print("   –£–¥–∞–ª–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã: \033[1;33m{}\033[0m".format(numbers_set - filtered_set))
print("‚îî" + "‚îÄ" * 45 + "‚îò")

# =============================================================================
# 6. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –†–ê–ó–ù–û–°–¢–¨ –ò –°–ò–ú–ú–ï–¢–†–ò–ß–ï–°–ö–ê–Ø –†–ê–ó–ù–û–°–¢–¨
# =============================================================================
print("\n\033[1;32m" + "üéØ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –†–ê–ó–ù–û–°–¢–¨ –ú–ù–û–ñ–ï–°–¢–í" + "\033[0m")
print("‚îå" + "‚îÄ" * 45 + "‚îê")

# –†–∞–∑–Ω–æ—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤ (—ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ set1, –Ω–æ –Ω–µ—Ç –≤ set2)
difference = set1 - set2
print("   –†–∞–∑–Ω–æ—Å—Ç—å (set1 - set2): \033[1;35m{}\033[0m".format(difference))

# –°–∏–º–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–Ω–æ—Å—Ç—å (—ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤)
symmetric_difference = set1 ^ set2
print("   –°–∏–º–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–Ω–æ—Å—Ç—å: \033[1;36m{}\033[0m".format(symmetric_difference))
print("‚îî" + "‚îÄ" * 45 + "‚îò")

# =============================================================================
# –ó–ê–í–ï–†–®–ï–ù–ò–ï –ü–†–û–ì–†–ê–ú–ú–´
# =============================================================================
print("\n\033[1;42m" + "‚ú® –í–´–ü–û–õ–ù–ï–ù–ò–ï –ü–†–û–ì–†–ê–ú–ú–´ –ó–ê–í–ï–†–®–ï–ù–û! ‚ú®" + "\033[0m")
